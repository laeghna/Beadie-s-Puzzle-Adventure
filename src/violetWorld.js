/*********************

     VIOLET WORLD      

*********************/

var violetWorld = {
    background: [
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,
        1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,
        0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,
        0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,
        1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,
        1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,
        1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    ],
    tiles: [],
    caveTimer: 0,
    caveFrameRate: 20,
    caveTileCount: 6,
    cave1x: 1440,
    cave2x: 1472,
    cave3x: 1504,
    cave4x: 1536,
    caveY: 384,
    violetTrailX: 1024,
    violetTrailY: 416,
    
    update: updateVioletWorld,
    getTile: getVioletWorldTile,
    clear: clearVioletWorld
};

function updateVioletWorld (cols, rows) {
  /*  this.caveTimer++;
    if (this.caveTimer % 20 === 0) {
        
        var count = getRandomInt(1, 3);
        var col = 0; 
        var row = 0;
        var i = 0;
        
        while (i < count) {
            
            col = getRandomInt(0, cols);
            row = getRandomInt(0, rows);
            
        if (this.tiles[row * cols + col] === 1)
            this.tiles[row * cols + col] += 1;
        
        i++;
        }
    }
    
    if (this.caveTimer === this.caveFrameRate) {
        
        this.caveTimer = 0;
        for(var c = 0; c < cols; c++) {
            
            for(var r = 0; r < rows; r++) {
                
                var index = r * cols + c;
                var tile = this.tiles[index];
                
                if (tile > 1) {
                    
                    if (tile % this.caveTileCount === 0) 
                        this.tiles[index] = 1;
                    else
                        this.tiles[index] += 1;
                }
            }
        }
    }*/
}

function getVioletWorldTile (index) {
    var tile = {x: 0, y: 0};
    
    if(this.tiles[index] == 0){
            
            tile.x = this.violetTrailX;
            tile.y = this.violetTrailY;

    } else {
        switch(this.tiles[index]) {
                
                case 1:
                    tile.x = this.cave1x;
                    break;
                
                case 2:
                    tile.x = this.cave2x;
                    break;
                
                case 3:
                    tile.x = this.cave3x;
                    break;
                
                case 4:
                    tile.x = this.cave4x;
                    break;
                
                case 5:
                    tile.x = this.cave3x;
                    break;
                
                case 6:
                    tile.x = this.cave2x;
                    break;
            }
            
            tile.y = this.caveY;
    }
    
    return tile;
}

function clearVioletWorld () {
    this.caveTimer = 0;
    this.tiles = this.background;
}